type Hkt = ['a[_], 'b]. 'a['b];

type SomePid = ['a]. Pid['a];

type Numpid = Hkt[SomePid, Int];
type N = Numpid;
type U = Numpid;

type SomeNum = Int;

actor summing {
	state sum: SomeNum;

	initialiser {
		myself: Numpid = summing;
		send(myself, 10000);
		return 0;
	}

	update (num: SomeNum) {
		if (num <= 0) {
			intrinsic(print_int, sum);
			return sum;
		};
		minused: Int = num - 1;
		send(summing, minused);
		return num + sum;
	}
}
