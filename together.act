actor sum {
	state acc: Num;

	initialiser {
		anything: for ['a]. Pid['a] = println;
		send(get_called, for ['a]. anything['a]);

		send(call_me, sum);
		return 0;
	}

	update (num: Num) {
		if (num <= 0) {
			send(println[Num], acc);
			return acc;
		};
		send(call_me, sum);
		return acc + num;
	}
}

actor println {
	state t: Unit;
	initialiser {}
	update['a] (msg: 'a) {
		intrinsic(print_value, msg);
		intrinsic(print_value, "\n");
	}
}

actor get_called {
	state u: Unit;
	initialiser {}
	update (who: for ['a]. Pid['a]) {
		x: (for ['a]. 'a)[Num] = 10;
		send(who[Num], 10000);
	}
}

actor call_me {
	state count: Num;

	initialiser {
		return 10000;
	}
	
	update (who: Pid[Num]) {
		send(who, count);
		return count - 1;
		x: Num = "Hello, world!";
	}
}
